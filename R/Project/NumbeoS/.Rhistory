# );
#
# CREATE TABLE health_care (
#     "Year" integer,                                   -- Year
#     "Country" text,                                   -- Country
#     "Health Care Index" numeric,
#     "Health CareExp. Index" numeric
# );
#
# CREATE TABLE pollution (
#     "Year" integer,                                   -- Year
#     "Country" text,                                   -- Country
#     "Pollution Index" numeric,
#     "Exp Pollution Index" numeric
# );
#
# CREATE TABLE property_investment (
#     "Year" integer,                                   -- Year
#     "Country" text,                                   -- Country
#     "Price To Income Ratio" numeric,
#     "Gross Rental Yield City Centre" numeric,
#     "Gross Rental Yield Outside of Centre" numeric,
#     "Price To Rent Ratio City Centre" numeric,
#     "Price To Rent Ratio Outside Of City Centre" numeric,
#     "Mortgage As A Percentage Of Income" numeric,
#     "Affordability Index" numeric
# );
#
# CREATE TABLE traffic (
#     "Year" integer,                                   -- Year
#     "Country" text,                                   -- Country
#     "Traffic Index" numeric,
#     "Time Index(in minutes)" numeric,
#     "Time Exp. Index" numeric,
#     "Inefficiency Index" numeric,
#     "CO2 Emission Index" numeric
# );
#
# json_data_cost_of_living_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/cost-of-living_2017.json")
# json_data_cost_of_living_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/cost-of-living_2018.json")
# json_data_cost_of_living_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/cost-of-living_2019.json")
#
# json_data_crime_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/crime_2017.json")
# json_data_crime_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/crime_2018.json")
# json_data_crime_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/crime_2019.json")
#
# json_data_health_care_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/health-care_2017.json")
# json_data_health_care_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/health-care_2018.json")
# json_data_health_care_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/health-care_2019.json")
#
# json_data_pollution_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/pollution_2017.json")
# json_data_pollution_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/pollution_2018.json")
# json_data_pollution_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/pollution_2019.json")
#
# json_data_property_investment_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/property-investment_2017.json")
# json_data_property_investment_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/property-investment_2018.json")
# json_data_property_investment_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/property-investment_2019.json")
#
# json_data_traffic_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/traffic_2017.json")
# json_data_traffic_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/traffic_2018.json")
# json_data_traffic_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/traffic_2019.json")
# df_temp_cost_of_living_2017 <- do.call(rbind.data.frame, json_data_cost_of_living_2017)
# df_temp_cost_of_living_2018 <- do.call(rbind.data.frame, json_data_cost_of_living_2018)
# df_temp_cost_of_living_2019 <- do.call(rbind.data.frame, json_data_cost_of_living_2019)
#
# df_temp_crime_2017 <- do.call(rbind.data.frame, json_data_crime_2017)
# df_temp_crime_2018 <- do.call(rbind.data.frame, json_data_crime_2018)
# df_temp_crime_2019 <- do.call(rbind.data.frame, json_data_crime_2019)
#
# df_temp_health_care_2017 <- do.call(rbind.data.frame, json_data_health_care_2017)
# df_temp_health_care_2018 <- do.call(rbind.data.frame, json_data_health_care_2018)
# df_temp_health_care_2019 <- do.call(rbind.data.frame, json_data_health_care_2019)
#
# df_temp_pollution_2017 <- do.call(rbind.data.frame, json_data_pollution_2017)
# df_temp_pollution_2018 <- do.call(rbind.data.frame, json_data_pollution_2018)
# df_temp_pollution_2019 <- do.call(rbind.data.frame, json_data_pollution_2019)
#
# df_temp_property_investment_2017 <- do.call(rbind.data.frame, json_data_property_investment_2017)
# df_temp_property_investment_2018 <- do.call(rbind.data.frame, json_data_property_investment_2018)
# df_temp_property_investment_2019 <- do.call(rbind.data.frame, json_data_property_investment_2019)
#
# df_temp_traffic_2017 <- do.call(rbind.data.frame, json_data_traffic_2017)
# df_temp_traffic_2018 <- do.call(rbind.data.frame, json_data_traffic_2018)
# df_temp_traffic_2019 <- do.call(rbind.data.frame, json_data_traffic_2019)
# df_cost_of_living_2017 <- as.data.frame(t(df_temp_cost_of_living_2017))
# df_cost_of_living_2018 <- as.data.frame(t(df_temp_cost_of_living_2018))
# df_cost_of_living_2019 <- as.data.frame(t(df_temp_cost_of_living_2019))
#
# df_crime_2017 <- as.data.frame(t(df_temp_crime_2017))
# df_crime_2018 <- as.data.frame(t(df_temp_crime_2018))
# df_crime_2019 <- as.data.frame(t(df_temp_crime_2019))
#
# df_health_care_2017 <- as.data.frame(t(df_temp_health_care_2017))
# df_health_care_2018 <- as.data.frame(t(df_temp_health_care_2018))
# df_health_care_2019 <- as.data.frame(t(df_temp_health_care_2019))
#
# df_pollution_2017 <- as.data.frame(t(df_temp_pollution_2017))
# df_pollution_2018 <- as.data.frame(t(df_temp_pollution_2018))
# df_pollution_2019 <- as.data.frame(t(df_temp_pollution_2019))
#
# df_property_investment_2017 <- as.data.frame(t(df_temp_property_investment_2017))
# df_property_investment_2018 <- as.data.frame(t(df_temp_property_investment_2018))
# df_property_investment_2019 <- as.data.frame(t(df_temp_property_investment_2019))
#
# df_traffic_2017 <- as.data.frame(t(df_temp_traffic_2017))
# df_traffic_2018 <- as.data.frame(t(df_temp_traffic_2018))
# df_traffic_2019 <- as.data.frame(t(df_temp_traffic_2019))
# dbWriteTable(con, "cost_of_living",
#              value = df_cost_of_living_2017, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "cost_of_living",
#              value = df_cost_of_living_2018, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "cost_of_living",
#              value = df_cost_of_living_2019, append = TRUE, row.names = FALSE)
#
# dbWriteTable(con, "crime",
#              value = df_crime_2017, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "crime",
#              value = df_crime_2018, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "crime",
#              value = df_crime_2019, append = TRUE, row.names = FALSE)
#
# dbWriteTable(con, "health_care",
#              value = df_health_care_2017, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "health_care",
#              value = df_health_care_2018, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "health_care",
#              value = df_health_care_2019, append = TRUE, row.names = FALSE)
#
# dbWriteTable(con, "pollution",
#              value = df_pollution_2017, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "pollution",
#              value = df_pollution_2018, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "pollution",
#              value = df_pollution_2019, append = TRUE, row.names = FALSE)
#
# dbWriteTable(con, "property_investment",
#              value = df_property_investment_2017, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "property_investment",
#              value = df_property_investment_2018, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "property_investment",
#              value = df_property_investment_2019, append = TRUE, row.names = FALSE)
#
# dbWriteTable(con, "traffic",
#              value = df_traffic_2017, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "traffic",
#              value = df_traffic_2018, append = TRUE, row.names = FALSE)
# dbWriteTable(con, "traffic",
#              value = df_traffic_2019, append = TRUE, row.names = FALSE)
df_cost_of_living_postgres <- dbGetQuery(con, "SELECT * from cost_of_living")
df_crime_postgres <- dbGetQuery(con, "SELECT * from crime")
df_health_care_postgres <- dbGetQuery(con, "SELECT * from health_care")
df_pollution_postgres <- dbGetQuery(con, "SELECT * from pollution")
df_property_investment_postgres <- dbGetQuery(con, "SELECT * from property_investment")
df_traffic_postgres <- dbGetQuery(con, "SELECT * from traffic")
df_master <- full_join(full_join(full_join(full_join(full_join(df_cost_of_living_postgres, df_crime_postgres, by = c("Country", "Year")),df_health_care_postgres, by = c("Country", "Year")), df_pollution_postgres, by = c("Country", "Year")), df_property_investment_postgres, by = c("Country", "Year")), df_traffic_postgres, by = c("Country", "Year"))
df_master
filter(df_master, Country=="Italy")
glimpse(df_master)
countryContinent <- read.csv(file="C:/Users/sveti/Desktop/Diverses/GitProjects/R/Project/countryContinent.csv",header=TRUE, sep=";")
colnames(countryContinent) <- c("Country", "Continent")
glimpse(countryContinent)
countryContinent[] <- lapply(countryContinent, as.character)
glimpse(countryContinent)
df_master_continent <- left_join(df_master,countryContinent, by="Country")
sum(is.na(df_master_continent["Continent"]))
df_master_continent[rowSums(is.na(df_master_continent["Continent"])) > 0,]
glimpse(df_master_continent)
df_analysis <- select(df_master_continent, Year, Country, 'Cost of Living Index', 'Rent Index',
'Local Purchasing Power Index', 'Gross Rental Yield City Centre',
'Gross Rental Yield Outside of Centre',
'Mortgage As A Percentage Of Income', 'Crime Index', 'Health Care Index',
'Pollution Index', 'Traffic Index', 'Time Index(in minutes)',
'CO2 Emission Index', Continent)
df_analysis
glimpse(df_analysis)
sum(is.na(df_analysis))
df_analysis[rowSums(is.na(df_analysis)) > 0,]
df_analysis_clean <- na.omit(df_analysis)
sum(is.na(df_analysis_clean))
glimpse(df_analysis_clean)
df_analysis_clean_2019 <- filter(df_analysis_clean, Year == 2019)
crime_plot <- ggplot(data=df_analysis_clean_2019, mapping=aes(x=Continent, y=`Crime Index`)) +
geom_boxplot()
ggplotly(crime_plot)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
Checking the data types we see that the data was defined as factors:
```{r}
glimpse(countryContinent)
```
Therefore we change the data types to characters.
```{r}
countryContinent[] <- lapply(countryContinent, as.character)
```
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
knitr::opts_chunk$set(echo = TRUE)
pw ="HdM2019r"
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database; "con" is used to connect to the database
con <- dbConnect(drv, dbname = "NumbeoR",
host = "localhost", port = 5432,
user = "postgres", password = pw)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
pw ="HdM2019r"
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database; "con" is used to connect to the database
con <- dbConnect(drv, dbname = "NumbeoR",
host = "localhost", port = 5432,
user = "postgres", password = pw)
pw ="HdM2019"
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database; "con" is used to connect to the database
con <- dbConnect(drv, dbname = "NumbeoR",
host = "localhost", port = 5432,
user = "postgres", password = pw)
# removes the password
rm(pw)
df_cost_of_living_postgres <- dbGetQuery(con, "SELECT * from cost_of_living")
df_crime_postgres <- dbGetQuery(con, "SELECT * from crime")
df_health_care_postgres <- dbGetQuery(con, "SELECT * from health_care")
df_pollution_postgres <- dbGetQuery(con, "SELECT * from pollution")
df_property_investment_postgres <- dbGetQuery(con, "SELECT * from property_investment")
df_traffic_postgres <- dbGetQuery(con, "SELECT * from traffic")
df_master <- full_join(full_join(full_join(full_join(full_join(df_cost_of_living_postgres, df_crime_postgres, by = c("Country", "Year")),df_health_care_postgres, by = c("Country", "Year")), df_pollution_postgres, by = c("Country", "Year")), df_property_investment_postgres, by = c("Country", "Year")), df_traffic_postgres, by = c("Country", "Year"))
df_master
filter(df_master, Country=="Germany")
```{r}
knitr::opts_chunk$set(echo = TRUE)
countryContinent <- read.csv(file="https://github.com/eibrahi/NumbeoR/blob/master/daten/CountryContinent.csv",header=TRUE, sep=";")
colnames(countryContinent) <- c("Country", "Continent")
View(countryContinent)
countryContinent <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/CountryContinent.csv",header=TRUE, sep=";")
colnames(countryContinent) <- c("Country", "Continent")
View(countryContinent)
df_master <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv")
View(df_master)
df_master <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv", header=FALSE)
View(df_master)
df_master <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv", header=TRUE)
View(df_master)
View(df_master)
shiny::runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp()
runApp()
runApp('NumbeoS')
runApp()
runApp()
runApp('NumbeoS')
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
pw ="HdM2019"
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database; "con" is used to connect to the database
con <- dbConnect(drv, dbname = "NumbeoR",
host = "localhost", port = 5432,
user = "postgres", password = pw)
# removes the password
rm(pw)
df_cost_of_living_postgres <- dbGetQuery(con, "SELECT * from cost_of_living")
df_crime_postgres <- dbGetQuery(con, "SELECT * from crime")
df_health_care_postgres <- dbGetQuery(con, "SELECT * from health_care")
df_pollution_postgres <- dbGetQuery(con, "SELECT * from pollution")
df_property_investment_postgres <- dbGetQuery(con, "SELECT * from property_investment")
df_traffic_postgres <- dbGetQuery(con, "SELECT * from traffic")
df_master <- full_join(full_join(full_join(full_join(full_join(df_cost_of_living_postgres, df_crime_postgres, by = c("Country", "Year")),df_health_care_postgres, by = c("Country", "Year")), df_pollution_postgres, by = c("Country", "Year")), df_property_investment_postgres, by = c("Country", "Year")), df_traffic_postgres, by = c("Country", "Year"))
df_master
df_test <- filter(df_master, Year==2017)
df_test
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
View(df_master)
View(df_master)
View(df_master)
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
View(df_master)
df_master <- as.Date(df_master2$Year, format = "%Y")
glimpse(df_master)
df_master2 <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv", header=TRUE)
df_master2$Year <- as.Date(df_master2$Year, format = "%Y")
glimpse(df_master2)
df_master2 <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv", header=TRUE)
df_master <- as.Date(df_master2$Year, format = "%Y")
glimpse(df_master)
df_master <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv", header=TRUE)
df_master <- mutate(Year2=as.Date(df_master$Year, format = "%Y"))
glimpse(df_master)
View(df_master)
df_master <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv", header=TRUE)
df_master <- mutate(df_master, Year2=as.Date(df_master$Year, format = "%Y"))
glimpse(df_master)
View(df_master)
library(dplyr)
df_master <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv", header=TRUE)
df_master <- mutate(df_master, Year2=as.Date(df_master$Year, format = "%Y"))
glimpse(df_master)
View(df_master)
df_master <- read.csv(file="https://raw.githubusercontent.com/eibrahi/NumbeoR/master/daten/MasterDF.csv", header=TRUE)
df_master <- mutate(df_master, Year2=as.character(df_master$Year))
glimpse(df_master)
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
runApp('NumbeoS')
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
knitr::opts_chunk$set(echo = TRUE)
configFile <- fromJSON(file=".../configFile.json")
configFile <- fromJSON(file=".../configFile.json")
configFile <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/configFile.json")
json_data_cost_of_living_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/cost-of-living_2017.json")
json_data_cost_of_living_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/cost-of-living_2018.json")
json_data_cost_of_living_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/cost-of-living_2019.json")
json_data_crime_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/crime_2017.json")
json_data_crime_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/crime_2018.json")
json_data_crime_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/crime_2019.json")
json_data_health_care_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/health-care_2017.json")
json_data_health_care_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/health-care_2018.json")
json_data_health_care_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/health-care_2019.json")
json_data_pollution_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/pollution_2017.json")
json_data_pollution_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/pollution_2018.json")
json_data_pollution_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/pollution_2019.json")
json_data_property_investment_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/property-investment_2017.json")
json_data_property_investment_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/property-investment_2018.json")
json_data_property_investment_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/property-investment_2019.json")
json_data_traffic_2017 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/traffic_2017.json")
json_data_traffic_2018 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/traffic_2018.json")
json_data_traffic_2019 <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/traffic_2019.json")
configFile <- fromJSON(file=".../configFile.json")
configFile <- fromJSON(".../configFile.json")
configFile <- fromJSON(configFile)
configFile <- fromJSON(configFile.json)
configFile <- fromJSON("configFile.json")
configFile <- fromJSON("/configFile.json")
getwd()
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
library("jsonlite")
configFile <- fromJSON("configFile.json")
library("jsonlite")
configFile <- fromJSON("C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/cost-of-living_2017.json")
library("jsonlite")
# configFile <- fromJSON("C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/daten/cost-of-living_2017.json")
configFile <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/R/Project/configFile.json")
View(configFile)
library("jsonlite")
# configFile <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/R/Project/configFile.json")
configFile <- fromJSON(file="configFile.json")
library("jsonlite")
# configFile <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/R/Project/configFile.json")
configFile <- fromJSON(file="configFile.json")
View(configFile)
class(configFile)
wd <- getwd()
View(configFile)
path <- configFile[1]
password <- configFile[2]
pw = password
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database; "con" is used to connect to the database
con <- dbConnect(drv, dbname = "NumbeoR",
host = "localhost", port = 5432,
user = "postgres", password = pw)
# removes the password
rm(pw)
pw = configFile[2]
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database; "con" is used to connect to the database
con <- dbConnect(drv, dbname = "NumbeoR",
host = "localhost", port = 5432,
user = "postgres", password = pw)
# removes the password
rm(pw)
pw = configFile[2]
library("jsonlite")
# configFile <- fromJSON(file="C:/Users/sveti/Desktop/Diverses/GitProjects/NumbeoR/R/Project/configFile.json")
configFile <- fromJSON(file="configFile.json")
pw = configFile[2]
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database; "con" is used to connect to the database
con <- dbConnect(drv, dbname = "NumbeoR",
host = "localhost", port = 5432,
user = "postgres", password = pw)
# removes the password
rm(pw)
pw
pw = configFile[2]
# loads the PostgreSQL driver
drv <- dbDriver("PostgreSQL")
# creates a connection to the postgres database; "con" is used to connect to the database
con <- dbConnect(drv, dbname = "NumbeoR",
host = "localhost", port = 5432,
user = "postgres", password = pw)
# removes the password
# rm(pw)
pw
pw
detach("package:jsonlite", unload = TRUE)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
configFile <- fromJSON(file="configFile.json")
library("jsonlite")
configFile <- fromJSON(file="configFile.json")
library("jsonlite")
configFile <- fromJSON(file="configFile.json")
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
library("jsonlite")
configFile <- fromJSON(file="configFile.json")
library("jsonlite")
configFile <- fromJSON(txt="configFile.json")
path <- configFile[1]
View(configFile)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
configFile <- fromJSON(txt="configFile.json")
configFile <- fromJSON(file="configFile.json")
path <- configFile[1]
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse")
library(DBI)                           # for PostgreSQL
library(RPostgreSQL)                   # for PostgreSQL
library("jsonlite")                    # JSON files
library("rjson")
library(plotly)                        # Visualisierungen
configFile <- fromJSON(file="configFile.json")
path <- configFile[1]
View(configFile)
